{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x12Bcb546bC60fF39F1Adfc7cE4605d5Bd6a6A876",
      "txHash": "0xd7eeb4738d8b17cf831789b038ced1be875677b95764c5d5419757f978e84380",
      "kind": "uups"
    },
    {
      "address": "0x54B8d8E2455946f2A5B8982283f2359812e815ce",
      "txHash": "0xa9c8e2b5e5ea61ad019c7e7e9cd6c7b33dbf4f3ce09da6e3a2ad6048f2daf855",
      "kind": "uups"
    }
  ],
  "impls": {
    "8b3baab4122d06efbb6c972944f559a87a0ccca82ae4b5eb1822ff4daf53e8cb": {
      "address": "0xeF31027350Be2c7439C1b0BE022d49421488b72C",
      "txHash": "0x215822b2a75346bb1a6afa6d7a6ff3ae1539335037e4eb60fd4193256399de55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "GWEI",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:45"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "tokenIds",
            "type": "t_struct(Counter)2454_storage",
            "src": "contracts\\swNFTUpgrade.sol:51"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:53"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHSymbolOld",
            "type": "t_string_storage",
            "src": "contracts\\swNFTUpgrade.sol:57"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swellAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:58"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "ETHER",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:59"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "feePool",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:60"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:61"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "depositContract",
            "type": "t_contract(IDepositContract)11917",
            "src": "contracts\\swNFTUpgrade.sol:63"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validators",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts\\swNFTUpgrade.sol:65"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validatorDeposits",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts\\swNFTUpgrade.sol:66"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "whiteList",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts\\swNFTUpgrade.sol:67"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6473_storage)",
            "src": "contracts\\swNFTUpgrade.sol:70"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "deprecatedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\swNFTUpgrade.sol:72"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "opRate",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts\\swNFTUpgrade.sol:448"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "botAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:449"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "isValidatorActive",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts\\swNFTUpgrade.sol:450"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "strategiesSet",
            "type": "t_struct(AddressSet)3153_storage",
            "src": "contracts\\swNFTUpgrade.sol:451"
          },
          {
            "contract": "TestswNFTUpgrade",
            "label": "eth1WithdrawalAddress",
            "type": "t_address",
            "src": "contracts\\tests\\TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IDepositContract)11917": {
            "label": "contract IDepositContract"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Position)6473_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)"
          },
          "t_struct(Position)6473_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "operator",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage"
              }
            ]
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "7ceffc851d5a431dccbc35abf43e9233f0590ef06f5aef65bf746b467a207e66": {
      "address": "0x38A70c040CA5F5439ad52d0e821063b0EC0B52b6",
      "txHash": "0xd2486e8c062af7ea5921415524c3079385e8748acda05cb6d57f84815fb6b88b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "GWEI",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:45"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "tokenIds",
            "type": "t_struct(Counter)2454_storage",
            "src": "contracts\\swNFTUpgrade.sol:51"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:53"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHSymbolOld",
            "type": "t_string_storage",
            "src": "contracts\\swNFTUpgrade.sol:57"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swellAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:58"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "ETHER",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:59"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "feePool",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:60"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts\\swNFTUpgrade.sol:61"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "depositContract",
            "type": "t_contract(IDepositContract)11917",
            "src": "contracts\\swNFTUpgrade.sol:63"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validators",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts\\swNFTUpgrade.sol:65"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validatorDeposits",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts\\swNFTUpgrade.sol:66"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "whiteList",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts\\swNFTUpgrade.sol:67"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6473_storage)",
            "src": "contracts\\swNFTUpgrade.sol:70"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "deprecatedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\swNFTUpgrade.sol:72"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "opRate",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts\\swNFTUpgrade.sol:448"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "botAddress",
            "type": "t_address",
            "src": "contracts\\swNFTUpgrade.sol:449"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "isValidatorActive",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts\\swNFTUpgrade.sol:450"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "strategiesSet",
            "type": "t_struct(AddressSet)3153_storage",
            "src": "contracts\\swNFTUpgrade.sol:451"
          },
          {
            "contract": "TestswNFTUpgrade",
            "label": "eth1WithdrawalAddress",
            "type": "t_address",
            "src": "contracts\\tests\\TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IDepositContract)11917": {
            "label": "contract IDepositContract"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Position)6473_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)"
          },
          "t_struct(Position)6473_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "operator",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage"
              }
            ]
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
