{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xab10616985db0bbeb95ebb5a1c3078b478a585cd809b98c4fbcf565f0ea5757d",
      "kind": "uups"
    },
    {
      "address": "0xaB7B4c595d3cE8C85e16DA86630f2fc223B05057",
      "txHash": "0xc412ff191210a567c50255c7eeb24702bac31b8f1f1394b5c0600915fdedb1fa",
      "kind": "uups"
    },
    {
      "address": "0x3C15538ED063e688c8DF3d571Cb7a0062d2fB18D",
      "txHash": "0xa2b5b6996097d0f20dd87ce583a347585db728d63436b471aeb05bf99eb15704",
      "kind": "uups"
    },
    {
      "address": "0x071586BA1b380B00B793Cc336fe01106B0BFbE6D",
      "txHash": "0x55892d8b730a15110e3db9ca999fb912fb2ccdfa4ba26d63e2e12f231a4fbba3",
      "kind": "uups"
    },
    {
      "address": "0x5133BBdfCCa3Eb4F739D599ee4eC45cBCD0E16c5",
      "txHash": "0xc1c78f86d7c3329d9c3309b6d2f0503afa7a2fca9a760bac6c1d19a3add9d87d",
      "kind": "uups"
    },
    {
      "address": "0x2Dd78Fd9B8F40659Af32eF98555B8b31bC97A351",
      "txHash": "0x5799bfa71f41a867b85ad8595607aa7f885161764baa84f7efe1635ba21aa174",
      "kind": "uups"
    }
  ],
  "impls": {
    "b3b012c18080c27590bd153d84a694c047a9a9faf0b1251d55486d51dd41a4a0": {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0xe579614fd9fd6d81b8143979bc50e1329572885cff13e0e29d5ad3753a15a7ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "GWEI",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:46"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "tokenIds",
            "type": "t_struct(Counter)2454_storage",
            "src": "contracts/swNFTUpgrade.sol:52"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:54"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHSymbol",
            "type": "t_string_storage",
            "src": "contracts/swNFTUpgrade.sol:55"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swDAOAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:56"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "ETHER",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "feePool",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "depositContract",
            "type": "t_contract(IDepositContract)6188",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validators",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validatorDeposits",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:64"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "whiteList",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4952_storage)",
            "src": "contracts/swNFTUpgrade.sol:68"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "deprecatedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/swNFTUpgrade.sol:417"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "opRate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:418"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "botAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:419"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "isValidatorActive",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:420"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "strategiesSet",
            "type": "t_struct(AddressSet)3153_storage",
            "src": "contracts/swNFTUpgrade.sol:421"
          },
          {
            "contract": "TestswNFTUpgrade",
            "label": "eth1WithdrawalAddress",
            "type": "t_address",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IDepositContract)6188": {
            "label": "contract IDepositContract"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Position)4952_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)"
          },
          "t_struct(Position)4952_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "operator",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage"
              }
            ]
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "08bcd2d2be6892423c7e2ef921515eee52d4f73a6caab25983d07314165070c1": {
      "address": "0xB06c856C8eaBd1d8321b687E188204C1018BC4E5",
      "txHash": "0x7bb92932a3ac19ef4dcb4aee9c74fc3867081de1c5c7e9652cbe224015b325f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "GWEI",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:46"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "tokenIds",
            "type": "t_struct(Counter)2454_storage",
            "src": "contracts/swNFTUpgrade.sol:52"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:54"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHSymbol",
            "type": "t_string_storage",
            "src": "contracts/swNFTUpgrade.sol:55"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swDAOAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:56"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "ETHER",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "feePool",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "depositContract",
            "type": "t_contract(IDepositContract)6188",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validators",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validatorDeposits",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:64"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "whiteList",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4952_storage)",
            "src": "contracts/swNFTUpgrade.sol:68"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "deprecatedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/swNFTUpgrade.sol:417"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "opRate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:418"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "botAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:419"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "isValidatorActive",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:420"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "strategiesSet",
            "type": "t_struct(AddressSet)3153_storage",
            "src": "contracts/swNFTUpgrade.sol:421"
          },
          {
            "contract": "TestswNFTUpgrade",
            "label": "eth1WithdrawalAddress",
            "type": "t_address",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IDepositContract)6188": {
            "label": "contract IDepositContract"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Position)4952_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)"
          },
          "t_struct(Position)4952_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "operator",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage"
              }
            ]
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f7ba52e4ef295e70dd70df900a2679bef6fe15fa2807933509a94e2e36189ead": {
      "address": "0xe70f935c32dA4dB13e7876795f1e175465e6458e",
      "txHash": "0xdb4dcdf630475c34a05daadbcacadd541301193696dbde748d664d5477ade576",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "GWEI",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:46"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "tokenIds",
            "type": "t_struct(Counter)2454_storage",
            "src": "contracts/swNFTUpgrade.sol:52"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:54"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swETHSymbol",
            "type": "t_string_storage",
            "src": "contracts/swNFTUpgrade.sol:55"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "swDAOAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:56"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "ETHER",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "feePool",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "depositContract",
            "type": "t_contract(IDepositContract)6188",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validators",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "validatorDeposits",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:64"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "whiteList",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)4952_storage)",
            "src": "contracts/swNFTUpgrade.sol:68"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "deprecatedStrategies",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/swNFTUpgrade.sol:417"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "opRate",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/swNFTUpgrade.sol:418"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "botAddress",
            "type": "t_address",
            "src": "contracts/swNFTUpgrade.sol:419"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "isValidatorActive",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/swNFTUpgrade.sol:420"
          },
          {
            "contract": "SWNFTUpgrade",
            "label": "strategiesSet",
            "type": "t_struct(AddressSet)3153_storage",
            "src": "contracts/swNFTUpgrade.sol:421"
          },
          {
            "contract": "TestswNFTUpgrade",
            "label": "eth1WithdrawalAddress",
            "type": "t_address",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IDepositContract)6188": {
            "label": "contract IDepositContract"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Position)4952_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)"
          },
          "t_struct(Position)4952_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256"
              },
              {
                "label": "operator",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage"
              }
            ]
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "5e4c999f61527284fae68760c2ee873e6881084b24823490dbddd66335b54404": {
      "address": "0xe039608E695D21aB11675EBBA00261A0e750526c",
      "txHash": "0x8104c9134b587008bdf7368c9d2da6166266978fe1cc609629a027f4f2d1e86b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "GWEI",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:45"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2454_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:51"
          },
          {
            "label": "swETHAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:53"
          },
          {
            "label": "swETHSymbolOld",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "label": "swellAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "label": "ETHER",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "label": "feePool",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:60"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IDepositContract)6197",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "label": "validatorDeposits",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:66"
          },
          {
            "label": "whiteList",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:67"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_struct(Position)5008_storage)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "label": "deprecatedStrategies",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:72"
          },
          {
            "label": "opRate",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:421"
          },
          {
            "label": "botAddress",
            "offset": 0,
            "slot": "366",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:422"
          },
          {
            "label": "isValidatorActive",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:423"
          },
          {
            "label": "strategiesSet",
            "offset": 0,
            "slot": "368",
            "type": "t_struct(AddressSet)3153_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:424"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:425"
          },
          {
            "label": "eth1WithdrawalAddress",
            "offset": 0,
            "slot": "416",
            "type": "t_address",
            "contract": "TestswNFTUpgrade",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDepositContract)6197": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)5008_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)5008_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operator",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a7d04414409c04a9502641b16ed79de6888c1f9e87fcb3d369c95e5a8ebc3b7c": {
      "address": "0x1780bCf4103D3F501463AD3414c7f4b654bb7aFd",
      "txHash": "0x352167e6d563ece9b68da62952584297849ba5c7f014bbeb64b2ed6bca29955d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "GWEI",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:45"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2454_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:51"
          },
          {
            "label": "swETHAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:53"
          },
          {
            "label": "swETHSymbolOld",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "label": "swellAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "label": "ETHER",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "label": "feePool",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:60"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IDepositContract)6197",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "label": "validatorDeposits",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:66"
          },
          {
            "label": "whiteList",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:67"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_struct(Position)5008_storage)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "label": "deprecatedStrategies",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:72"
          },
          {
            "label": "opRate",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:428"
          },
          {
            "label": "botAddress",
            "offset": 0,
            "slot": "366",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:429"
          },
          {
            "label": "isValidatorActive",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:430"
          },
          {
            "label": "strategiesSet",
            "offset": 0,
            "slot": "368",
            "type": "t_struct(AddressSet)3153_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:431"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:432"
          },
          {
            "label": "eth1WithdrawalAddress",
            "offset": 0,
            "slot": "416",
            "type": "t_address",
            "contract": "TestswNFTUpgrade",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDepositContract)6197": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)5008_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)5008_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operator",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e7717aff5af29300d924a5f453282f9395bb61b34b5e9c93a889d605966dc32c": {
      "address": "0x3904b8f5b0F49cD206b7d5AABeE5D1F37eE15D8d",
      "txHash": "0x6cb203e0719eabcbb317666ee5d05f2ddfd2fdc048717f241fe741de7987e411",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "GWEI",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:45"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2454_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:51"
          },
          {
            "label": "swETHAddress",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:53"
          },
          {
            "label": "swETHSymbolOld",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:57"
          },
          {
            "label": "swellAddress",
            "offset": 0,
            "slot": "355",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:58"
          },
          {
            "label": "ETHER",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:59"
          },
          {
            "label": "feePool",
            "offset": 0,
            "slot": "357",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:60"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:61"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IDepositContract)6197",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:63"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "360",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:65"
          },
          {
            "label": "validatorDeposits",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:66"
          },
          {
            "label": "whiteList",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:67"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_struct(Position)5008_storage)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:70"
          },
          {
            "label": "deprecatedStrategies",
            "offset": 0,
            "slot": "364",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:72"
          },
          {
            "label": "opRate",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:428"
          },
          {
            "label": "botAddress",
            "offset": 0,
            "slot": "366",
            "type": "t_address",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:429"
          },
          {
            "label": "isValidatorActive",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:430"
          },
          {
            "label": "strategiesSet",
            "offset": 0,
            "slot": "368",
            "type": "t_struct(AddressSet)3153_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:431"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "370",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SWNFTUpgrade",
            "src": "contracts/swNFTUpgrade.sol:432"
          },
          {
            "label": "eth1WithdrawalAddress",
            "offset": 0,
            "slot": "416",
            "type": "t_address",
            "contract": "TestswNFTUpgrade",
            "src": "contracts/tests/TestswNFTUpgrade.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDepositContract)6197": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint256)": {
            "label": "mapping(bytes => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)5008_storage)": {
            "label": "mapping(uint256 => struct ISWNFT.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3153_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2852_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2454_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Position)5008_storage": {
            "label": "struct ISWNFT.Position",
            "members": [
              {
                "label": "pubKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "baseTokenBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeStamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operator",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Set)2852_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
